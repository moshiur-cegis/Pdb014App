@using Pdb014App.Models.UserManage;
@using Microsoft.AspNetCore.Identity

@model ReflectionIT.Mvc.Paging.PagingList<Pdb014App.Models.PDB.SubstationModels.TblSubstation>
@using ReflectionIT.Mvc.Paging
@addTagHelper *, ReflectionIT.Mvc.Paging

@inject SignInManager<TblUserRegistrationDetail> SignInManager
@inject UserManager<TblUserRegistrationDetail> UserManager

@{
    var user = await UserManager.GetUserAsync(User);
}


@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var isMsg = TempData["statuMessageSuccess"] != null ? 1 : 0;

}





@section Styles {

    <link href="~/css/datastyle.css" rel="stylesheet" />

    <style type="text/css">

        table.table {
            table-layout: fixed;
        }

            table.table tr th,
            table.table tr td {
                border-color: #e9e9e9;
            }

            table.table th {
                min-width: 80px;
            }

                table.table th:last-child {
                    width: 100px;
                }

                table.table th i {
                    font-size: 13px;
                    margin: 0 5px;
                    cursor: pointer;
                }

            table.table td a {
                cursor: pointer;
                display: inline-block;
                margin: 0 5px;
                min-width: 24px;
            }

                table.table td a.add {
                    color: #27C46B;
                }

                table.table td a.edit {
                    color: #FFC107;
                }

                table.table td a.delete {
                    color: #E34724;
                }

            table.table td i {
                font-size: 19px;
            }

            table.table td a.add i {
                font-size: 24px;
                margin-right: -1px;
                position: relative;
                top: 3px;
            }


            table.table .form-control {
                width: 100%;
                padding: 2px 5px;
                line-height: 1.0;
            }

                table.table .form-control.error {
                    border-color: #f50000;
                }

            table.table td .add {
                display: none;
            }
    </style>

}




<div class="row">
    <div class="col-12">
        <h2>List of Substation</h2>
        <hr>

        <p>
            <a asp-action="Create" class="btn btn-success">Add New Substation</a>
        </p>
        <div class="float-md-right">
            <form method="get" class="form-inline">
                <input name="filter" class="form-control" placeholder="filter"
                       value="@Model.RouteValue["Filter"]" />

                <input name="cai" class="form-control" placeholder="cai"
                       value="@Model.RouteValue["cai"]" type="hidden" />

                <button type="submit" class="btn btn-info">
                    <span class="glyphicon glyphicon-search" aria-hidden="true"></span> Search
                </button>
            </form>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="form-view" id="updatePanel">
            @if (TempData["statuMessageSuccess"] != null)
            {
                <div class="alert alert-success alert-dismissible" role="alert">
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    @TempData["statuMessageSuccess"]
                </div>
            }
            <div id="multi-form-wrapper" class="data-view multi-form-wrapper">
                <table id="multi-form-view" class="table table-responsive multi-form-view">
                    <thead>
                        <tr>


                            <th>
                                Action
                            </th>
                            <th>
                                Substation Components
                            </th>


                            <th>

                                Substation Type
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.SubstationName)

                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.SubstationToLookUpSnD.CircleInfo.ZoneInfo.ZoneName)

                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.SubstationToLookUpSnD.CircleInfo.CircleName)

                            </th>
                            <th>

                                S&D Code
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.NominalVoltage)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.InstalledCapacity)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.MaximumDemand)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.PeakLoad)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Location)
                            </th>
                            @*<th>
                                    @Html.DisplayNameFor(model => model.AreaOfSubstation)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Latitude)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Longitude)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.YearOfComissioning)
                                </th>*@
                            @*<th>Action</th>*@
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>

                                <td>
                                    <div class="btn-group">
                                        <a asp-action="Edit" asp-route-id="@item.SubstationId" class="btn btn-success" data-toggle="tooltip" asp-route-cai="@Model.RouteValue["cai"]" data-placement="top" title="Edit">@Html.DisplayFor(modelItem => item.SubstationId) Edit</a>
                                        @*@Html.DisplayFor(modelItem => item.SubstationId)*@
                                        @if (SignInManager.IsSignedIn(User) && User.IsInRole("System Administrator"))
                                        {
                                            <a asp-action="Delete" asp-route-id="@item.SubstationId" class="btn btn-success" data-toggle="tooltip" asp-route-cai="@Model.RouteValue["cai"]" data-placement="top" title="Delete">Delete</a>
                                        }
                                    </div>
                                </td>
                                <td>
                                    <a class="btn btn-info" href="#" onclick="show_components(@item.SubstationId); return false;">Components</a>
                                </td>


                                <td>
                                    @Html.DisplayFor(modelItem => item.SubstationType.SubstationTypeName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.SubstationName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.SubstationToLookUpSnD.CircleInfo.ZoneInfo.ZoneName)

                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.SubstationToLookUpSnD.CircleInfo.CircleName)

                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.SubstationToLookUpSnD.SnDName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.NominalVoltage)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.InstalledCapacity)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.MaximumDemand)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PeakLoad)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Location)
                                </td>
                                @*<td>
                                        @Html.DisplayFor(modelItem => item.AreaOfSubstation)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Latitude)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Longitude)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.YearOfComissioning)
                                    </td>*@
                                @*<td>
                                        <a asp-action="Edit" asp-route-id="@item.SubstationId">Edit</a>
                                        <a asp-action="Details" asp-route-id="@item.SubstationId">Details</a> |
                                        <a asp-action="Delete" asp-route-id="@item.SubstationId">Delete</a>
                                    </td>*@
                            </tr>
                        }
                    </tbody>
                </table>


            </div>
        </div>
    </div>
</div>

<div style="text-align: center;">
    <vc:pager paging-list="@Model" />
</div>

@section Scripts {
    <script src="~/lib/jquery-ui/jquery-ui.js"></script>
    <script src="~/js/autocomplete.extend.js"></script>

    <script type="text/javascript">
        var isMessage = 1 * "@isMsg";

            if (isMessage==1)
            {
                msg.init("success","Success", "@TempData["statuMessageSuccess"]");
            }


            function show_components(substationId) {
                if (!substationId)
                    return false;
                var isShowAction = 1; //By RMO

            $.ajax({
                type: "GET",
                url: '@Url.Action("Components", "Tblsubstations")',
                dataType: "html",
                data: { substationId: substationId, isShowLayout: 0, isShowAction: isShowAction },
                before: $("#busy-indicator").fadeIn(150),
            })
                .done(function (compInfo) {
                modal.init("Components Information", compInfo, true, false);
            })
                .fail(function (ex) {
                modal.init("Components Information", "...", false, false);
                msg.init("error", "Error... . . !", "Failed to load components information. " + ex.error);
            }).always(function () {
                    $("#busy-indicator").fadeOut(150);
            });

            return false;
        }


        //$(function () {

        //    $(".field-name").on("change",
        //        function () {

        //            console.log($(this))
        //            setAutocomplete($(this));
        //            return false;
        //        }).trigger("change");

        //    });

    </script>
}
