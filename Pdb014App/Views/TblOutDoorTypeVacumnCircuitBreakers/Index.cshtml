@*@model IEnumerable<Pdb014App.Models.PDB.SubstationModels.TblOutDoorTypeVacumnCircuitBreaker>*@

@model ReflectionIT.Mvc.Paging.PagingList<Pdb014App.Models.PDB.SubstationModels.TblOutDoorTypeVacumnCircuitBreaker>
@using ReflectionIT.Mvc.Paging
@addTagHelper *, ReflectionIT.Mvc.Paging

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@section Styles {

    <link href="~/css/datastyle.css" rel="stylesheet" />

    <style type="text/css">

        table.table {
            table-layout: fixed;
        }

            table.table tr th,
            table.table tr td {
                border-color: #e9e9e9;
            }

            table.table th {
                min-width: 80px;
            }

                table.table th:last-child {
                    width: 100px;
                }

                table.table th i {
                    font-size: 13px;
                    margin: 0 5px;
                    cursor: pointer;
                }

            table.table td a {
                cursor: pointer;
                display: inline-block;
                margin: 0 5px;
                min-width: 24px;
            }

                table.table td a.add {
                    color: #27C46B;
                }

                table.table td a.edit {
                    color: #FFC107;
                }

                table.table td a.delete {
                    color: #E34724;
                }

            table.table td i {
                font-size: 19px;
            }

            table.table td a.add i {
                font-size: 24px;
                margin-right: -1px;
                position: relative;
                top: 3px;
            }


            table.table .form-control {
                width: 100%;
                padding: 2px 5px;
                line-height: 1.0;
            }

                table.table .form-control.error {
                    border-color: #f50000;
                }

            table.table td .add {
                display: none;
            }
    </style>

}

<div class="container">
    <h2>List of Vacumn Circuit Breaker</h2>
    <hr>

    <p>
        <a asp-action="Create">Add New</a>
    </p>

    <div class="row">

        <div class="col-12">
            <div class="float-md-right">
                <form method="get" class="form-inline">
                    <input name="filter" class="form-control" placeholder="filter"
                           value="@Model.RouteValue["Filter"]" />
                    <button type="submit" class="btn btn-info">
                        <span class="glyphicon glyphicon-search" aria-hidden="true"></span> Search
                    </button>
                </form>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="form-view" id="updatePanel">
                <div id="multi-form-wrapper" class="data-view multi-form-wrapper">
                    <table id="multi-form-view" class="table table-responsive multi-form-view">
                        <thead>
                            <tr>
                                <th>
                                  
                                    Vacumn Circuit Breaker Id
                                </th>
                                <th>
                                    @*@Html.DisplayNameFor(model => model.OutDoorTypeVacumnCircuitBreakerIdToSubstation)*@
                                    Substation
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.ManufacturersNameCountry)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.ManufacturersModelNo)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.MaximumRatedVoltage)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Frequency)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.RatedNormalCurrent)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.NoOfPhase)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.NoOfBreakPerPhrase)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.InterruptingMedium)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.ImpulseWithstandOn1250MsWave)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.PowerFrequencyTestVoltageDryAt50Hz1Min)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.ShortTimeWithstandCurrent3SecondRms)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.SymmetricalRms)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.AsymmetricalRms)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.ShortCircuitMakingCurrentPeak)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.TripCoilCurrent)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.TripCoilVoltage)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.OpeningTimeWithoutCurrentAt100OfRatedBreakingcurrent)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.BreakingTime)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.ClosingTime)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.RatedVoltageofSpringWindingMotorforClosing)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.SpringWindingMotorCurrent)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.ClosingReleaseCoilCurrent)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.ClosingReleaseCoilVoltage)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.NoOfTrippingCoil)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.CircuitBreakerTerminalConnectors)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.PressureInVacuumTubeforVCB)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.AtRatedCurrentSwitching)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.AtShortCircuitCurrentSwitching)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.RatedOperatingSequence)
                                </th>
                                @*<th>Action</th>*@
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                            <tr>
                                <td>
                                    @*@Html.DisplayFor(modelItem => item.OutDoorTypeVacumnCircuitBreakerId)*@
                                     <a asp-action="Edit" asp-route-id="@item.OutDoorTypeVacumnCircuitBreakerId" class="text-success hover-dark" data-toggle="tooltip" data-placement="top" title="Edit">@Html.DisplayFor(modelItem => item.OutDoorTypeVacumnCircuitBreakerId)</a>
                                </td>

                                <td>
                                    @Html.DisplayFor(modelItem => item.OutDoorTypeVacumnCircuitBreakerIdToSubstation.SubstationId)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ManufacturersNameCountry)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ManufacturersModelNo)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.MaximumRatedVoltage)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Frequency)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.RatedNormalCurrent)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.NoOfPhase)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.NoOfBreakPerPhrase)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.InterruptingMedium)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ImpulseWithstandOn1250MsWave)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PowerFrequencyTestVoltageDryAt50Hz1Min)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ShortTimeWithstandCurrent3SecondRms)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.SymmetricalRms)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.AsymmetricalRms)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ShortCircuitMakingCurrentPeak)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TripCoilCurrent)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TripCoilVoltage)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.OpeningTimeWithoutCurrentAt100OfRatedBreakingcurrent)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.BreakingTime)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ClosingTime)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.RatedVoltageofSpringWindingMotorforClosing)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.SpringWindingMotorCurrent)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ClosingReleaseCoilCurrent)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ClosingReleaseCoilVoltage)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.NoOfTrippingCoil)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CircuitBreakerTerminalConnectors)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PressureInVacuumTubeforVCB)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.AtRatedCurrentSwitching)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.AtShortCircuitCurrentSwitching)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.RatedOperatingSequence)
                                </td>
                                @*<td>
                                    <a asp-action="Edit" asp-route-id="@item.OutDoorTypeVacumnCircuitBreakerId">Edit</a>
                                    <a asp-action="Details" asp-route-id="@item.OutDoorTypeVacumnCircuitBreakerId">Details</a> |
            <a asp-action="Delete" asp-route-id="@item.OutDoorTypeVacumnCircuitBreakerId">Delete</a>
                                </td>*@
                            </tr>
                            }
                        </tbody>
                    </table>

                </div>
            </div>
        </div>
    </div>
</div>
<div style="text-align: center;">
    <vc:pager paging-list="@Model" />
</div>
